---
name: pypi_deploy

"on":
  workflow_call:
    inputs:
      additional_packages:
        default: ""
        description: String of additional packages that should be installed.
        required: false
        type: string
      environment_name:
        default: ""
        description: The name of the environment used to deploy to PyPi
        required: true
        type: string
      jobs_run_on:
        default: ubuntu-latest
        description: The runner group on which jobs will run.
        required: false
        type: string
      package_name:
        default: ""
        description: The name of the package deploying to PyPi
        required: true
        type: string
      poetry_install_options:
        default: "--no-root"
        description: Extra options to pass to Poetry when doing an install.
        required: false
        type: string
      python_version:
        default: "3.12"
        description: The version of Python to use for the run.
        required: false
        type: string
      timeout_minutes:
        default: 5
        description: The maximum time (in minutes) for a job to run.
        required: false
        type: number
      working_directory:
        default: "."
        description: The working directory where all jobs should be executed.
        required: false
        type: string

jobs:
  build:
    defaults:
      run:
        working-directory: ${{ inputs.working_directory }}
    name: Build distribution ðŸ“¦
    permissions:
      contents: read
      pull-requests: read
    runs-on: ${{ inputs.jobs_run_on }}
    steps:
      - name: Install additional packages
        if: ${{ inputs.additional_packages != '' }}
        run: |
          sudo apt-get update -yq
          sudo apt-get install -y ${{ inputs.additional_packages }}
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - name: Install poetry
        run: pipx install poetry
      - name: "Set up Python ${{ inputs.python_version }}"
        uses: actions/setup-python@v6
        with:
          cache: poetry
          python-version: "${{ inputs.python_version }}"
      - name: Configure Poetry
        run: poetry config virtualenvs.in-project true
      - name: Install dependencies
        run: poetry install ${{ inputs.poetry_install_options }}
      - name: Package build
        run: poetry build
      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
    timeout-minutes: ${{ inputs.timeout_minutes }}
  pypi_deploy:
    if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    defaults:
      run:
        working-directory: ${{ inputs.working_directory }}
    environment:
      name: ${{ inputs.environment_name }}
      url: https://pypi.org/p/${{ inputs.package_name }}
    needs:
      - build
    permissions:
      contents: read
      id-token: write
      pull-requests: read
    runs-on: ${{ inputs.jobs_run_on }}
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v5
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
    timeout-minutes: ${{ inputs.timeout_minutes }}
